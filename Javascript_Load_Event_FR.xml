<tuto>

<h1>Comment exécuter un script après le chargement de la page avec l'évenement "load"</h2>

Lorsque l'on souhaite faire des modifications du DOM en JavaScript, il est conseillé d'attendre la fin du chargement de la page.
Pour déclencher l'exécution de notre script au bon moment, nous allons utiliser un listener sur l'évènement "load", qui indique la fin du chargement de la page.
Et pour enregistrer notre listener nous allons utiliser la fonction "rock-solid addEvent" telle que fournie par dustindiaz.com.

La fonction addEvent de dustindiaz.com est la suivante :
<code style="javascript">
	/**
	 * Code to ensure our event always gets triggered when the DOM is updated.
	 * @param obj
	 * @param type
	 * @param fn
	 * @source http://www.dustindiaz.com/rock-solid-addevent/
	 */
	function addEvent( obj, type, fn ) {
	    if (obj.addEventListener) {
	        obj.addEventListener( type, fn, false );
	        EventCache.add(obj, type, fn);
	    }
	    else if (obj.attachEvent) {
	        obj["e"+type+fn] = fn;
	        obj[type+fn] = function() { obj["e"+type+fn]( window.event ); }
	        obj.attachEvent( "on"+type, obj[type+fn] );
	        EventCache.add(obj, type, fn);
	    }
	    else {
	        obj["on"+type] = obj["e"+type+fn];
	    }
	}
	
	var EventCache = function(){
	    var listEvents = [];
	    return {
	        listEvents : listEvents,
	        add : function(node, sEventName, fHandler){
	            listEvents.push(arguments);
	        },
	        flush : function(){
	            var i, item;
	            for(i = listEvents.length - 1; i >= 0; i = i - 1){
	                item = listEvents[i];
	                if(item[0].removeEventListener){
	                    item[0].removeEventListener(item[1], item[2], item[3]);
	                };
	                if(item[1].substring(0, 2) != "on"){
	                    item[1] = "on" + item[1];
	                };
	                if(item[0].detachEvent){
	                    item[0].detachEvent(item[1], item[2]);
	                };
	                item[0][item[1]] = null;
	            };
	        }
	    };
	}();
</code>

Et notre utilisation est simplissime : 
<code style="javascript">
		
	/** Vider le cache des évènements **/
	addEvent(window,'unload',EventCache.flush);

	/** Ajouter notre évènement **/
	addEvent(window,'load', function() {
		alert("A présent nous pouvons manipuler le DOM!");
		// TODO ajoutez les modifications de DOM ici !		
	});
</code>

Où que vous déclariez ce code dans la page, l'alerte ne sera lancée qu'à la fin du chargement de la page.

</tuto>
