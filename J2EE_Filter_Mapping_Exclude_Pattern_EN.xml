<tuto>
<h1>Exclurde URLs from filter-mapping in web.xml file</h1>

While configuring a filter-mapping in the web.xml file, we may have to use an "openly aggressive" mapping pattern : 
<code style="xml">
	<filter-mapping>
		<filter-name>monFiltre</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</code>

The "/*" pattern maps <b>all</b> the application urls, which can sometime be too large a selection.
Obviously it would be practical to combin the global pattern <code style="xml"><url-pattern>/*</url-pattern></code> with an exclusion pattern.
For example, we would like to exclude "/css/*" or "/script/*". 
There is no such option however in the web.xml file...

The solution is to add the exclusion pattern in the filtre's logic itself :
<code style="xml">
	...
	<filter>
		<filter-name>myFilter</filter-name>
		<filter-class>com.tutotechno.FilterWithExclusions</filter-class>
		<init-param>
			<param-name>excluded-patterns</param-name>
			<param-value>/css/*,/script/*</param-value>
		</init-param>
	</filter>
	...	
</code>

In Java we will code the filter in the following way : 

<code style="java">
public class ExclusionsEnabledFilter implements Filter {

	private String excludePatternsString = null;

	@Override
	public void init(FilterConfig cfg) throws ServletException {
		this.excludePatternsString = cfg.getInitParameter("excluded-patterns");
		
		// Proceed to the filter's configuration...
	}

	public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) 
		throws IOException, ServletException {
		final String url = request.getRequestURL().toString();
		if (isExcluded(url)) {
			// Exclusion detected : exiting the filter's execution
			chain.doFilter(request, response);
			return;
		} else {
			// No exclusion : proceeding the normal filter execution...
		}
	}
	
	private boolean isExcluded(String url){
		// Examples of exclusion patterns : "/css/*,/script/*,/foobar/*"
		final String[] excludedPatterns = excludePatternsString.split(",");
		for (String excludedPattern : excludedPatterns){
			final Pattern pattern = Pattern.compile(excludedPattern);
			final Matcher matcher = pattern.matcher(url);
			if (matcher.find()){
				// One of the patterns excludes the url
				return true;
				System.out.println("Matching " + excludedPattern + " url : " + url);
			} else {
				System.out.println("Not matching " + excludedPattern + " url : " + url);
			}
		}
		
		// No pattern matched
		return false;
	}
}
</code>

</tuto>
