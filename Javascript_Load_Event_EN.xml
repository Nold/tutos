<tuto>

<h1>How to use the "load" event to execute a script after the page is fully loaded</h2>

If you want to make JavaScript DOM modifications, it can be best to wait for the page load to end.
Here we are going to trigger our script execution with a listener on the "load" event, which corresponds to the end of the page load.
And to register our listener we use the "rock-solid addEvent" function as provided by dustindiaz.com.

The "addEvent" function from dustindiaz.com is the following :
<code style="javascript">
	/**
	 * Code to ensure our event always gets triggered when the DOM is updated.
	 * @param obj
	 * @param type
	 * @param fn
	 * @source http://www.dustindiaz.com/rock-solid-addevent/
	 */
	function addEvent( obj, type, fn ) {
	    if (obj.addEventListener) {
	        obj.addEventListener( type, fn, false );
	        EventCache.add(obj, type, fn);
	    }
	    else if (obj.attachEvent) {
	        obj["e"+type+fn] = fn;
	        obj[type+fn] = function() { obj["e"+type+fn]( window.event ); }
	        obj.attachEvent( "on"+type, obj[type+fn] );
	        EventCache.add(obj, type, fn);
	    }
	    else {
	        obj["on"+type] = obj["e"+type+fn];
	    }
	}
	
	var EventCache = function(){
	    var listEvents = [];
	    return {
	        listEvents : listEvents,
	        add : function(node, sEventName, fHandler){
	            listEvents.push(arguments);
	        },
	        flush : function(){
	            var i, item;
	            for(i = listEvents.length - 1; i >= 0; i = i - 1){
	                item = listEvents[i];
	                if(item[0].removeEventListener){
	                    item[0].removeEventListener(item[1], item[2], item[3]);
	                };
	                if(item[1].substring(0, 2) != "on"){
	                    item[1] = "on" + item[1];
	                };
	                if(item[0].detachEvent){
	                    item[0].detachEvent(item[1], item[2]);
	                };
	                item[0][item[1]] = null;
	            };
	        }
	    };
	}();
</code>

And the usage is quite simple : 
<code style="javascript">

	/** Adding our event **/
	addEvent(window,'load', function() {
		alert("Now we can manipulate DOM!");
		// TODO insert DOM manipulation code here !		
	});

	/** For a cleaner behavior : flushing the event cache on unload **/
	addEvent(window,'unload',EventCache.flush);
</code>

You can place this code anywhere in the page, the alert will be displayed after page load only.

</tuto>
